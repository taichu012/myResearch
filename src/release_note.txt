++++++++++++++++
Release Notes:
Author：taichu
++++++++++++++++


Ed0.0.1（2016-06-29）-（2016-07-13）
----------------------------
REQ0001:实现基本的producer功能；
REQ0002：实现producer线程化；
REQ0003:实现基本的consumer功能和线程化；
REQ0004：实现demo功能，可以启动1个producer线程和1个consumer线程；
REQ0005:实现INI配置文件的读取；
REQ0006：实现通过运行脚本来以进程形式启动zookeeper和kafka2个服务器；
REQ0007:增加了consumer连续K次收不到msg就退出线程的机制；
REQ0008:增加了shutdown的hook钩子到exit处理线程，且将处理函数接口化；
REQ0009：增加了MyKafkaDemo的控制台输入接收处理，任何输入将触发demo程序结束，并通过钩子妥善处理进程和线程善后工作；
REQ0010：将源码放在远端git仓库维护（https://git.oschina.net/taichu/MyKafka.git）；
REQ0011：综合前面开发内容，实现了MyKafkaDemo启动2个进程和2个现场来演示kafka平台的消息收发，并且
实现了console输入任何内容（比如ENTER回车）就结束程序，通过钩子勾到shutdown消息，妥善关闭2个进程和2个现场，
但2个进程是独立的2个cmd窗口，还需手动关闭（推荐在WIN7的任务管理器中对2个cmd进程“结束进程树”而不是“结束进程”，
这样会级联的关闭cmd启动的java子进程！如果发现java子进程上未关闭，可在任务管理器中关闭它们（jconsole中可以看到java进程号）
REQ0012：增加了对log4j的支持，输出多个log文件到根目录
BUG0013:修复了inireader多个调用者用不同inifilename调用的冲突问题；
REQ0014：实现对github的源码推送，实现一个本地项目修改并推送到2个远端的git仓库（纯eclipse配置）
		https://github.com/taichu012/MyKafka.git（已经废弃）
		https://git.oschina.net/taichu/MyKafka.git（已经废弃）
REQ0015：变更git仓库地址为如下：
		https://github.com/taichu012/MyResearch.git
		https://git.oschina.net/taichu/MyResearch.git
REQ0016:实现了基本的netty收发程序；实现了行结束符的添加和分包（frame）处理；
REQ0017:修正了netty的lineBasedMessageDecoder不支持\r作为行结束符的bug；
REQ0018：实现了基本的过车记录消息收发的测试项目及框架（方便以后扩展为实际项目）
REQ0019:增加了对PI计算的代码，在math这个pacakge中；
REQ0020:实现基本的SMP协议，用netty收发smp消息达到约15KCAPS/10MBS/400万条270秒/
		硬件I5的2核4线程等价4core，内存netty不能超过2GB（应该是jvm的heap分配大小），jdk1.8
		处理800万条的时候开头就报错内存不够，详见（http://stackoverflow.com/questions/21299975/in-netty-4-do-i-need-to-set-option-xxmaxdirectmemorysize）
		发现即使发送正确，netty会有一定概率发送空包（上层逻辑接收到未主动发送的空字符串）的情况，百万分支1.5以下；逻辑应该要考虑屏蔽；
		不做处理会发生未知错误，较难排查；
REQ0021:将子项目VPRC单独用自己的release note开发和跟踪，从主research项目中独立；
REQ0022：为eclipse增加了Pydev插件（需要eclipse4.5+至少Mars，及JDK8+）；并将srapytest爬虫程序托管到2个远端git上；
REQ0023：优化工具类T，所有方法都放入某个静态子类，且静态子类可以不断内部继续嵌套静态孙类等；
REQ0024：增加CRC8的工具类方法；







++++++++++++++++
TODOLIST: 
++++++++++++++++

1.【CLOSED】开发：implement consumer;
2.【CLOSED】开发：setup log4j(console output and log file output) 
3.【CLOSED】开发：setup command line start mode (as producer ONLY,consumer ONLY, both,...) 
4.【CLOSED】源码：放入GITHUB或oschina的开源地方
5.【OPEN】IDE：增加对maven/NEXUS的支持，增加pom.xml并增加版本号到配置；
6.【GOING】开发：计划实现对socket/TCP（UDP看情况）端口的多线程支持，接受数据到producer并存入kafka，使用concurrent线程和Executors类;
			http://www.cnblogs.com/fbsk/archive/2012/02/03/2336689.html 
7.【CLOSED】测试：用jmeter来发送message给producer，做压力测试
8.【OPEN】开发：实现URL接口（非传统socket/TCP/UDP接口）接受数据给producer存入kafka(开发tomcat的webapp吗?或其他形式)
9.【OPEN】开发：开发高层次的作业协议，协调consumer和producer的消息收发，监控topic变化，offset变化等；基于kafka，高于kafka; 
10.【CLOSED】开发：尝试用生物调控因子来动态的处理producer和consumer的数量；【已经单独放入package“regulate”处理】
11.【CLOSED】IDE：JAVADOC/API文档嵌入：eclipse中菜单Window到Perferences到java项到installed JRE，选中rt.jar包，单击右边Javadoc Location；
14.【CLOSED】IDE：jdk的class带着源码，可以直接查看；
15.【CLOSED】IDE：查看第三方lib库的源码（点击类触发找不到class后，可选择带source的jar包）和javadoc（在build中lib中选择某个点开添加source和javadoc）
16.【OPEN】开发：kafka集群的多台host（多个partition，多个producer，多个consumer等）的实践；
17.【CLOSED】测试：对topic下message的收，发作统计，来核对数目；
18.【CLOSED】修改项目名字为myresearch，但是因为github无法修改projectname（git.oschina.net可以）所以另建项目。
19.【OPEN】关于PI的计算，可以考虑用要给和标准PI的百分比差，或绝对值差来不断调整算法的迭代次数，自动的选择往差delta变小的地方走，有点像深度学习或神经网络
    的梯度下降算法，但可能会有多个极值。这要看PI的无穷级数生成式是否为单调逼近？还是穿透？还是发散？等等！
20.【OPEN】 class ‘java.util.zip.CRC32’ need to be studied and wraped before used.
	(http://docs.oracle.com/javase/8/docs/api/java/util/zip/CRC32.html)





	  
	  
	  