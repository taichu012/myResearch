++++++++++++++++
Hints
++++++++++++++++

H0001 处理报错：Exception in thread "main" java.lang.NoClassDefFoundError: org/apache/log4j/Level
                 说明： 缺少包：slf4j-api-1.5.2.jar，slf4j-log4j12-1.5.2.jar，log4j-1.2.17.jar
                             它们 都在kafka安装目录的libs中，拷贝到工程，应用为build编译所需类库文件；
                             然后 在class类文件开头引入包“import org.apache.log4j.*; 
                             在 class类文件的类定义中加入“private static Logger log =Logger.getLogger("MyClass.class");”
                             
H0002 中文乱码问题（TODO）：
	1.WIN7默认的cmd（命令行窗口）是GBK编码（2字节），不是utf-8（3字节）；
	2.在cmd中可以用命令“chcp”来切换：
		chcp 65001  就是换成UTF-8代码页
		chcp 936 可以换回默认的GBK
		chcp 437 是美国英语
	3.一般来说eclipse默认页码是GBK，可在“window--preferences--general--workspace”设定为utf-8
	4.在cmd中启动zookeeper和kafka后，再启动1个producer和1个consumer，因为都是GBK，所以消息为“中文”，都能看到；但是producer的CMD
	  窗体输入中文后，在IDE/eclipse中的console输出的时候看到“？？？”问号；待研究TODO；
	5.eclipse的源码source编码格式一般继承OS，比如继承WIN7的默认GBK，但可以转换显示。问题是如果java文件是GBK，txt文件是utf-8，转换为
	 任何一种，其他就看不到了。而且转换显示，并非“实际转换文件！”，所以可以安装插件“com.lifesting.tool.encoding_1.0.0.jar”，
	 就能在eclipse中实现转换规则设定，包括文件实际转换！
	  
H0003 关于网络IO堵塞
	//socket.accept线程会因为client没有发送换行回车而阻塞；
	//也会因为最后没有获得约定的结束标记而永远阻塞；
	//如果为socket设定了accept的timeout，则会收到SocketTimeoutException而供你处置，
	//如果你不主动结束socket，即使抛出超时异常，socket依然阻塞！
	//windows下是先回车后换行（\r\n，或13,10，在jmeter里面可以设定E0L），MAC OS是换行\r，Linux是回车\n
	//工具jmeter的tcpsample默认一行之后会自动添加回车换行符，便于对端socket的readline捕获回车或换行
	//但是因为阻塞网络IO没有协商结束标记，所以只要TCP socket开着，而网络无字节/字符流量，就一直在read阻塞
	//所以必须协商结束符比如"<EOF>"等作为flag。
	
	//对于非阻塞式的NIO，再研究！可以直接上框架netty
	
H0004 eclipse的快速格式化format快捷键是ctrl+shift+f，但经常和输入法冲突，当你关闭输入法才可以让这个快捷方式奇效！

H0005 类型后面三个点(String...)，是从Java 5开始，Java语言对方法参数支持一种新写法，叫可变长度参数列表;
      http://bbs.51cto.com/thread-1012690-1.html
      
      比如netty中的如下语句
          public DelimiterBasedFrameDecoder(int maxFrameLength, ByteBuf... delimiters) {
        this(maxFrameLength, true, delimiters);
    }
    
H0006: java不允许只有返回值不同（函数名和参数表都一样）的成员函数存在！

H0007: 怎样获得System.getProperty("ABC", "456")
	说明：只有在启动程序/app时候用参数（见如下举例）以“-D”开头，则可在程序中用System.getProperty()获取到该参数的值
		set JAVA_OPTS =%JAVA_OPTS%  -DABC=123
		set DEBUG_OPTS=%DEBUG_OPTS% -DXXX="string value"
		set JAVA_OPTS =%JAVA_OPTS%  -DYYY=false
		通用格式：-Dproperty.name=value
		然后用System.getProperty('ABC',"456")可以获取到值,如果为空，默认设定为“456”

H0008：  netty框架相关经验
（1）netty的ByteBuf（pool和unpool）：
	http://www.tuicool.com/articles/MBneaa
	http://www.tuicool.com/articles/FFb6Zr
	http://www.cnblogs.com/gaoxing/p/4304340.html
（2）netty入门
	netty入门实例【极好！】（http://www.cnblogs.com/zhuawang/p/3849742.html）
	netty框架下server收着N个client，并可能主动发给client信息（一边server是被动接受client，而不是主动发信息给client）
（3）tcp粘包（netty框架中处理粘包问题）
	netty中的粘包和分包【极好】：http://m.blog.csdn.net/article/details?id=41122501
（4）netty心跳处理
	http://www.tuicool.com/m/articles/m2IRZv
	http://www.voidcn.com/blog/gaoqiao1988/article/p-4946414.html
（5）netty自定义handler的处理（***）
	非常重要的一点是自定义的n个handler之间的关系，自己最清楚，然后他们之间的逻辑通过调用ctx.fireChannelXXXX()方法传递下去；
	详见ctx的方法提示，非常重要，否则会卡死在channel chain（pipeline）的第一个handler中！
	
H0009： eclipse无法自动编译class的问题
	http://blog.sina.com.cn/s/blog_accc22d201019wn5.html
	1.如果是红色感叹号在项目前面，可能是build配置上某个文件丢失；
	2.如果是大叉，尤其是某个class类源码的大叉，那是语法错误，语法错误可以不修改而运行其他好的class文件；
	3.如果在经常重新build（clean后或refresh后）后发现error无法删除bin目录下的输出文件夹的某个子文件；
	    ！！！很可能是通过OS打开了某个文件（比如打开了notepad在修改一个config.ini文件，而不是从eclipse打开的！）会导致build问题！！！
	    
H0010：关于maven
（maven和ant的不同是，ant给你工具你自己造房子，maven不止给你工具，还提供造房子的理念和模板并建议你按照规则造房子，这也导致了maven的工具更强大）
	1.maven一个小例子小介绍（http://zhanghua.1199.blog.163.com/blog/static/464498072013112222746461/）
	2.maven的生命周期介绍（http://maven.apache.org/guides/introduction/introduction-to-the-lifecycle.html#Packaging）	
	3.maven的plugin介绍（http://maven.apache.org/plugins/）    
	
	
	
	
	